apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-credentials
  namespace: dev
type: Opaque
data:
  # value: root
  mysql-root-password: cm9vdA==
  # value: user
  mysql-user: dXNlcg==
  # value: password
  mysql-password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-config
  namespace: dev
data:
  mysql-database: tutorial_db
  MYSQL_HOST: mysql
  MYSQL_PORT: '3306'
  MYSQL_DATABASE: tutorial_db
  MYSQL_USER: user
  MYSQL_PASSWORD: password
  MYSQL_ROOT_PASSWORD: root
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: dev
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: mysql
              containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: mysql-database
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: dev
  labels:
    app: mysql
    tier: database
spec:
  selector:
    app: mysql
    tier: database
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      name: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-workbench
  namespace: dev
  labels:
    app: mysql-workbench
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-workbench
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-workbench
    spec:
      containers:
        - name: mysql-workbench
          image: lscr.io/linuxserver/mysql-workbench:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3000
            - containerPort: 3001
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Etc/UTC"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-workbench
  namespace: dev
  labels:
    app: mysql-workbench
spec:
  selector:
    app: mysql-workbench
  ports:
    - name: workbench-3000
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: workbench-3001
      protocol: TCP
      port: 3001
      targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: dev
  labels:
    app: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
        - name: adminer
          image: adminer:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: dev
  labels:
    app: adminer
spec:
  selector:
    app: adminer
  ports:
    - name: adminer
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  namespace: dev
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
          env:
            - name: PMA_ARBITRARY
              value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  namespace: dev
  labels:
    app: phpmyadmin
spec:
  selector:
    app: phpmyadmin
  ports:
    - name: phpmyadmin
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: samanalishiri/application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: dev-config
            - secretRef:
                name: dev-credentials
          env:
            - name: APP_HOST
              value: "0.0.0.0"
            - name: APP_PORT
              value: "8080"
            - name: APP_PROFILES
              value: "mysql"
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: dev-config
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: dev
spec:
  selector:
    app: application
  ports:
    - name: app
      protocol: TCP
      port: 8080
      targetPort: 8080 