---
apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-config
  namespace: dev
data:
  APP_HOST: "0.0.0.0"
  APP_PORT: "8080"
  APP_PROFILES: "rabbitmq"
  BROKER_HOST: "broker"
  BROKER_PORT: "5672"
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-credentials
  namespace: dev
type: Opaque
data:
  BROKER_USERNAME: cm9vdA==  # base64-encoded 'root'
  BROKER_PASSWORD: cm9vdA==  # base64-encoded 'root'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: dev
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: BROKER_USERNAME
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: BROKER_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: dev
spec:
  selector:
    app: rabbitmq
  ports:
    - name: queue-port
      port: 5672
      targetPort: 5672
    - name: management-ui-port
      port: 15672
      targetPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: samanalishiri/application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: dev-config
            - secretRef:
                name: dev-credentials
          volumeMounts:
            - name: config
              mountPath: /config
            - name: credentials
              mountPath: /credentials
      volumes:
        - name: config
          configMap:
            name: dev-config
        - name: credentials
          secret:
            secretName: dev-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: dev
spec:
  selector:
    app: application
  ports:
    - name: app
      protocol: TCP
      port: 8080
      targetPort: 8080