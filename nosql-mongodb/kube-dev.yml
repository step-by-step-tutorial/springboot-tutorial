apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-config
  namespace: dev
data:
  APP_HOST: "0.0.0.0"
  APP_PORT: "8080"
  APP_PROFILES: "mongo"
  MONGO_DB_HOST: "localhost"
  MONGO_DB_PORT: "27017"
  MONGO_DB_NAME: "springboot_tutorial"
  mongod.conf: |
    storage:
      dbPath: /var/lib/mongodb
    systemLog:
      destination: file
      logAppend: true
      path: /var/log/mongodb/mongod.log
    net:
      port: 27017
      bindIp: 127.0.0.1
    processManagement:
      timeZoneInfo: /usr/share/zoneinfo
    security:
      authorization: enabled
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-credentials
  namespace: dev
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: cm9vdA== # root
  MONGO_INITDB_ROOT_PASSWORD: cm9vdA== # root
  ME_CONFIG_MONGODB_ADMINUSERNAME: cm9vdA== # root
  ME_CONFIG_MONGODB_ADMINPASSWORD: cm9vdA== # root
  MONGO_DB_USER: cm9vdA== # root
  MONGO_DB_PASS: cm9vdA== # root
  ME_CONFIG_MONGODB_URL: bW9uZ29kYjovL3Jvb3Q6cm9vdEBtb25nbzoyNzAxNw== # mongodb://root:root@mongo:27017
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-pvc
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
            - mountPath: /etc/mongod.conf
              subPath: mongod.conf
              name: dev-config
          envFrom:
            - secretRef:
                name: dev-credentials
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: database-pvc
        - name: dev-config
          configMap:
            name: dev-config
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: dev
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express:latest
          ports:
            - containerPort: 8081
          envFrom:
            - secretRef:
                name: dev-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
  namespace: dev
spec:
  selector:
    app: mongo-express
  ports:
    - port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: samanalishiri/application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: dev-config
            - secretRef:
                name: dev-credentials
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: dev-config
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: dev
spec:
  selector:
    app: application
  ports:
    - name: app
      protocol: TCP
      port: 8080
      targetPort: 8080
