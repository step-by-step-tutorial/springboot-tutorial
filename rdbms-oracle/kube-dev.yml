apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-credentials
  namespace: dev
type: Opaque
data:
  # value: system
  oracle-user: c3lzdGVt
  # value: password
  oracle-password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-config
  namespace: dev
data:
  ORACLE_HOST: oracle
  ORACLE_PORT: '1521'
  ORACLE_DATABASE: xepdb1
  ORACLE_USER: system
  ORACLE_PASSWORD: password
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: oracle-pvc
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ords-config-pvc
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oracle
  namespace: dev
  labels:
    app: oracle
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oracle
  template:
    metadata:
      labels:
        app: oracle
    spec:
      containers:
        - name: oracle
          image: container-registry.oracle.com/database/express:21.3.0-xe
          ports:
            - containerPort: 1521
            - containerPort: 5500
          env:
            - name: ORACLE_PWD
              valueFrom:
                secretKeyRef:
                  name: dev-credentials
                  key: oracle-password
          volumeMounts:
            - mountPath: /opt/oracle/oradata
              name: oracle-data
      volumes:
        - name: oracle-data
          persistentVolumeClaim:
            claimName: oracle-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: oracle
  namespace: dev
spec:
  selector:
    app: oracle
  ports:
    - name: tcp
      port: 1521
      targetPort: 1521
    - name: em
      port: 5500
      targetPort: 5500
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ords
  namespace: dev
  labels:
    app: ords
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ords
  template:
    metadata:
      labels:
        app: ords
    spec:
      containers:
        - name: ords
          image: container-registry.oracle.com/database/ords:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /etc/ords/config
              name: ords-config
          command: [ "ords", "serve" ]
      volumes:
        - name: ords-config
          persistentVolumeClaim:
            claimName: ords-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ords
  namespace: dev
spec:
  selector:
    app: ords
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: dev
  labels:
    app: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
        - name: adminer
          image: adminer:latest
          ports:
            - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: dev
spec:
  selector:
    app: adminer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: samanalishiri/application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: dev-config
            - secretRef:
                name: dev-credentials
          env:
            - name: APP_HOST
              value: "0.0.0.0"
            - name: APP_PORT
              value: "8080"
            - name: APP_PROFILES
              value: "oracle"
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: dev-config
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: dev
spec:
  selector:
    app: application
  ports:
    - name: app
      protocol: TCP
      port: 8080
      targetPort: 8080 