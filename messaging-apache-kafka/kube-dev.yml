apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-credentials
  namespace: dev
type: Opaque
data:
  ACTIVE_MQ_USER: YXJ0ZW1pcw==  # base64 encoded 'artemis'
  ACTIVE_MQ_PASS: YXJ0ZW1pcw==  # base64 encoded 'artemis'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-config
  namespace: dev
data:
  APP_HOST: "0.0.0.0"
  APP_PORT: "8080"
  APP_PROFILES: "kafka"
  BROKER_URL: "tcp://artemis:61616"
  KAFKA_TOPIC_NAME: "main-topic"
  KAFKA_GROUP_ID: "main-group"
  KAFKA_URL: "kafka-service:9093"
  KAFKA_CFG_BROKER_ID: "1"
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper-service:2181"
  KAFKA_CFG_LISTENERS: "LOCALHOST://:9092,CONTAINER://:9093"
  KAFKA_CFG_ADVERTISED_LISTENERS: "LOCALHOST://localhost:9092,CONTAINER://kafka-service:9093"
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "LOCALHOST:PLAINTEXT,CONTAINER:PLAINTEXT"
  KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "LOCALHOST"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          volumeMounts:
            - name: zookeeper-data
              mountPath: /bitnami
      volumes:
        - name: zookeeper-data
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: dev
spec:
  selector:
    app: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka
          ports:
            - containerPort: 9092
            - containerPort: 9093
          envFrom:
            - configMapRef:
                name: dev-config
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami
      volumes:
        - name: kafka-data
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: dev
spec:
  selector:
    app: kafka
  ports:
    - name: localhost
      port: 9092
      targetPort: 9092
    - name: container
      port: 9093
      targetPort: 9093
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafdrop
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop
  template:
    metadata:
      labels:
        app: kafdrop
    spec:
      containers:
        - name: kafdrop
          image: obsidiandynamics/kafdrop:latest
          ports:
            - containerPort: 9000
          env:
            - name: KAFKA_BROKERCONNECT
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: KAFKA_URL
            - name: JVM_OPTS
              value: "-Xms32M -Xmx64M"
---
apiVersion: v1
kind: Service
metadata:
  name: kafdrop-service
  namespace: dev
spec:
  selector:
    app: kafdrop
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: samanalishiri/application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          env:
            - name: APP_HOST
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: APP_HOST
            - name: APP_PORT
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: APP_PORT
            - name: APP_PROFILES
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: APP_PROFILES
            - name: KAFKA_TOPIC_NAME
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: KAFKA_TOPIC_NAME
            - name: KAFKA_GROUP_ID
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: KAFKA_GROUP_ID
            - name: KAFKA_URL
              valueFrom:
                configMapKeyRef:
                  name: dev-config
                  key: KAFKA_URL
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: dev
spec:
  selector:
    app: application
  ports:
    - port: 8080
      targetPort: 8080
