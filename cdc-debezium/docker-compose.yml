version: '3.9'
services:
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    hostname: redisinsight
    restart: always
    ports:
      - "5540:5540"
  mysql:
    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=test_db
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - "./src/main/resources/users.sql:/docker-entrypoint-initdb.d/users.sql"
  adminer:
    image: adminer
    container_name: adminer
    hostname: adminer
    restart: always
    ports:
      - "8084:8080"
  zookeeper:
    image: docker.io/bitnami/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka
    container_name: kafka
    hostname: kafka
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: LOCALHOST://:9092,CONTAINER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: LOCALHOST://localhost:9092,CONTAINER://kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LOCALHOST:PLAINTEXT,CONTAINER:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LOCALHOST
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    hostname: kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: "-Xms32M -Xmx64M"
  debezium:
    image: debezium/connect:3.0.0.Final
    container_name: debezium
    hostname: debezium
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium-config
      OFFSET_STORAGE_TOPIC: debezium-offset
      STATUS_STORAGE_TOPIC: debezium-status
      BOOTSTRAP_SERVERS: kafka:9093
  debeziumui:
    image: debezium/debezium-ui:latest
    container_name: debeziumui
    hostname: debeziumui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://debezium:8083
    restart: always
  cdcdebezium:
      image: samanalishiri/cdcdebezium:latest
      build:
        context: .
        dockerfile: Dockerfile
      container_name: cdcdebezium
      hostname: cdcdebezium
      restart: always
      ports:
        - "8080:8080"
      environment:
        APP_HOST: "0.0.0.0"
        APP_PORT: "8080"
        APP_PROFILES: mysql,redis,kafka,debezium
        DATABASE_USERNAME: user
        DATABASE_PASSWORD: password
        DATABASE_HOST: mysql
        DATABASE_PORT: 3306
        DATABASE_NAME: test_db
        REDIS_HOST: redis
        REDIS_PORT: 6379
        KAFKA_TOPIC_NAME: cdc.test_db.example_table
        KAFKA_GROUP_ID: cdc.test_db.main-group
        KAFKA_URL: kafka:9093
        DEBEZIUM_URL: http://debezium:8083
        DEBEZIUM_REGISTER_PATH: /connectors
        DEBEZIUM_CONNECTORS_FILE: connectors.json
        TOPIC_PREFIX: cdc
        TABLES: test_db.example_table
      depends_on:
        - mysql
        - redis
        - kafka
        - debezium
